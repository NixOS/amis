name: Deploy
permissions:
  id-token: write
  contents: read
on:
  push:
    paths:
      - 'tf/**'
      - '.github/workflows/deploy.yml'
    branches: 
      - main
  pull_request:
    paths:
      - 'tf/**'
      - '.github/workflows/deploy.yml'
    branches: 
      - main
jobs:
  plan:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write
      pull-requests: write
    outputs:
      exitcode: ${{ steps.plan.outputs.exitcode }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: DeterminateSystems/nix-installer-action@cd46bde16ab981b0a7b2dce0574509104543276e # v9
      - uses: DeterminateSystems/magic-nix-cache-action@eeabdb06718ac63a7021c6132129679a8e22d0c7 # v3
      - uses: aws-actions/configure-aws-credentials@010d0da01d0b5a38af31e9c3470dbfdabdecca3a # v4.0.1
        with:
          role-to-assume: arn:aws:iam::686862074153:role/plan 
          aws-region: eu-central-1
      - name: Init
        run: |
          cd tf
          nix shell --inputs-from . nixpkgs#opentofu --command ./tofu-init.sh
      - name: Plan
        id: plan
        run: |
          cd tf
          set +e
          nix shell --inputs-from . nixpkgs#opentofu --command tofu plan -var "repo=$GITHUB_REPOSITORY" -detailed-exitcode -out tfplan
          export exitcode=$?
          set -e
          echo "exitcode=$exitcode" >> "$GITHUB_OUTPUT"
          if [ $exitcode -eq 1 ]; then
            exit 1
          else 
            exit 0
          fi

      - name: Publish plan
        uses: actions/upload-artifact@26f96dfa697d77e81fd5907df203aa23a56210a8 # v4
        with:
          name: tfplan
          path: tf/tfplan

      - name: Create string output
        id: tf-plan-string
        run: |
          cd tf
          plan=$(nix shell --inputs-from . nixpkgs#opentofu --command tofu show -no-color tfplan)
          delimiter="$(openssl rand -hex 8)"
          cat <<EOF >> "$GITHUB_OUTPUT"
          summary<<${delimiter}
          ## Plan Output
          <details><summary>Click to expand</summary>
          \`\`\`terraform
          ${plan}
          \`\`\`
          </details>
          ${delimiter}
          EOF

      - name: Publish Terraform Plan to Task Summary
        env:
          SUMMARY: ${{ steps.tf-plan-string.outputs.summary }}
        run: |
          echo "$SUMMARY" >> "$GITHUB_STEP_SUMMARY"


  apply:
    runs-on: ubuntu-latest
    needs: [plan]
    environment: infra
    if: github.ref == 'refs/heads/main' && needs.plan.outputs.exitcode == 2
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
      - uses: DeterminateSystems/nix-installer-action@cd46bde16ab981b0a7b2dce0574509104543276e # v9
      - uses: DeterminateSystems/magic-nix-cache-action@eeabdb06718ac63a7021c6132129679a8e22d0c7 # v3
      - uses: aws-actions/configure-aws-credentials@010d0da01d0b5a38af31e9c3470dbfdabdecca3a # v4.0.1
        with:
          role-to-assume: arn:aws:iam::686862074153:role/deploy
          aws-region: eu-central-1
      - name: Download plan
        uses: actions/download-artifact@6b208ae046db98c579e8a3aa621ab581ff575935 # v4
        with:
          name: tfplan
          path: tf
      - name: init
        run: |
          cd tf
          nix shell --inputs-from . nixpkgs#opentofu --command ./tofu-init.sh
      - name: Apply plan
        run: |
          cd tf
          nix shell --inputs-from . nixpkgs#opentofu --command tofu apply -auto-approve tfplan

